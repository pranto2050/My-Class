

Introduction ----- Constructor ---- In C++

In C++, constructors are special member functions of a class that are executed automatically whenever an object of the class is created. 
Their primary purpose is to initialize the members of the class. 
Constructors have the same name as the class and do not have a return type, not even void.


Key Features of Constructors:
    1.Same Name as Class: The name of the constructor must match the name of the class.
    2.No Return Type: Constructors do not return any value.
    3.Called Automatically: They are invoked automatically when an object is created.
    4.Overloading: A class can have multiple constructors with different parameters (constructor overloading).
    5.Default Constructor: If no constructor is defined, C++ provides a default constructor.



Types of Constructors: 
    1.Default Constructor
    2.Parameterized Constructor
    3.Copy Constructor





1.Default Constructor:
    A default constructor is a constructor that does not take any arguments.


Example:
    class Example { // Make a class...
public:
    Example() {  // Constructor
        cout << "Default constructor called!" << endl; 
    }
};





2.Parameterized Constructor
    // A parameterized constructor is a constructor that takes arguments. 
    or
    // A constructor that takes arguments to initialize class members.


Example:
class Example {
private:
    int x, y;
public:
    Example(int a, int b) { 
        x = a; 
        y = b; 
        cout << "Parameterized constructor called!" << endl;
    }
};






3. Copy Constructor
    A constructor that initializes an object by copying data from another object of the same class.


Example:
class Example {
private:
    int x;
public:
    Example(int a) { x = a; }
    Example(const Example &obj) { 
        x = obj.x; 
        cout << "Copy constructor called!" << endl; 
    }
};


